package org.rochlitz.bankNotifier;

import java.util.List;
import java.util.concurrent.BlockingQueue;

import javax.ejb.Singleton;
import javax.inject.Inject;

import org.rochlitz.kontoNotfier.persistence.AllDAO;
import org.rochlitz.kontoNotfier.persistence.NotifierDTO;

/**
 * @author aroc
 *
 *         reads nots from db and put them to queue and waits until queue has
 *         mor space or time is for next sceduling
 * 
 */

@Singleton
public class NotifierControler {

	private BlockingQueue notsQ;

	@Inject
	AllDAO dao;

	boolean fillQ = true;

	public void fillQueuWithNots(){
		
	try {
			
			List<NotifierDTO> nots = (List<NotifierDTO>) dao.getAll( new NotifierDTO() ) ;
			 try {
			       while (fillQ) {
			    	   nQ.put( nots.iterator().next() ); 
			       }
			     } catch (InterruptedException ex) { ... handle ...}
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void run() {
	     try {
	       while (true) { queue.put(produce()); }
	     } catch (InterruptedException ex) { ... handle ...}
	   }

}
