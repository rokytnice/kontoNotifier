package org.rochlitz.kontoNotifier;

import java.util.concurrent.Callable;
import java.util.logging.Logger;

import javax.inject.Inject;

import org.rochlitz.kontoNotfier.persistence.AllDAO;
import org.rochlitz.kontoNotfier.persistence.NotifierDTO;

public class NotfierCallableTask implements Callable<Boolean> {

	long id;

	private AllDAO dao;

//	@Inject
//	private Logger logger;

	public NotfierCallableTask(long id, AllDAO dao2) {
		this.id = id;
		this.dao=dao2;
	}

	@Override
	public Boolean call()	throws	Exception	{
//								logger.info("Sleeping...");
//								Thread.sleep(5000);	
//								logger.info("Finished	sleeping!");
										
								NotifierDTO not = (NotifierDTO) dao.find(id, new NotifierDTO());
								System.out.println("process task for Not id " + not.getId());
//								logger.info("process task for Not id " + not.getId());
								//TODO hbci execute
								 //TODO JMS , email
								return new Boolean(true); //sucess 
								
				}
}